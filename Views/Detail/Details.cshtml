<!-- Chart Build in Header-->


<!DOCTYPE html>

<!-- <html lang="en"> -->

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <link rel="stylesheet" type="text/css" href="./css/main.css">

    <title> Crime Chart </title>

    <style>
        li {
            display: inline;
        }

        ul {
            text-align: center;
            background-color: #333;
        }

        li a {
            color: white;
            padding: 14px 16px;
            text-decoration: none;
        }
    </style>


    <script type="text/javascript">
        window.onload = function () {
            var chart = new CanvasJS.Chart("chartContainer", {
                title: {
                    text: "Arrest Data"
                },

                data: [
                    {

                        type: "column",
                        name: "Arson Cases",
                        dataPoints: [
                            { label: "2020", y: 3 },
                            { label: "2019", y: 15 },
                            { label: "2018", y: 58 }

                        ]
                    },

                ]
            });

            chart.render();
        }
    </script>

    <script type="text/javascript" src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>

</head>



<!-- Chart Build in Body-->

<body>

    <h1> Bar chart</h1>

    <canvas id="barchart" width="800" height="350"></canvas>


    <script>
    new Chart(document.getElementById("barchart"), {
      type: '@Model.ChartType',
      data: {
        labels: [@Html.Raw(@Model.Labels)],               // X-axis (years)
        datasets: [
          {
            label: "# of Crimes",                         // Y-axis (# of crimes)
            backgroundColor: [@Html.Raw(@Model.Colors)],
            data: [@Model.Data]
          }
        ]
      },
      options: {
        legend: { display: false },
        title: {
          display: true,
          text: '@Model.Title'
        }
      }
    });

    </script>



</body>






@{
    ViewData["Title"] = "Race Details";
}

<h2>@ViewData["Title"]</h2>

@model IEnumerable<DIS_Assignment4.Models.Datum>
<h3></h3>
<a href="/Detail/Create/@(ViewData["key"])" class="btn btn-primary btn-md">Create</a>
<br /><br />
<table>
    <tr>
        <th>Race</th>
        <th>Year</th>
        <th>Amount of Arrests</th>
        <th>Delete Record</th>
        <th>Update Record</th>
    </tr>
@foreach (DIS_Assignment4.Models.Datum result in Model)
{<tr>
    <td>
        @(result.key)
    </td>
    <td>
        @(result.data_year)
    </td>
    <td>
        @(result.value)
    </td>


    <td>
        <form class="form-group" asp-controller="Detail" asp-action="Delete" method="post">
            <input type="hidden" name="key" value="@result.key" />
            <input type="hidden" name="data_year" value="@result.data_year" />
            <input type="hidden" name="value" value="@result.value" />

            <button type="submit" class="btn btn-primary btn-sm">Delete</button>
        </form>
    </td>
    <td><form class="form-group" asp-controller="Detail" asp-action="Edit" method="post">
            <input type="hidden" name="ID" value="@result.ID" />
            <input type="hidden" name="key" value="@result.key" />
            <input type="hidden" name="data_year" value="@result.data_year" />
            <input type="hidden" name="value" value="@result.value" />

            <button type="submit" class="btn btn-sm">Update</button>
        </form></td>
</tr>
        
  
}
</table>
